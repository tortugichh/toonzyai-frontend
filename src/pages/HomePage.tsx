import { Button } from '@/components/ui/button';
import { useNavigate } from 'react-router-dom';
import { useRef } from 'react';
import { Header, Footer } from '@/components/layout';

export default function HomePage() {
  const navigate = useNavigate();
  const featuresRef = useRef<HTMLElement>(null);

  const scrollToFeatures = () => {
    if (featuresRef.current) {
      featuresRef.current.scrollIntoView({ behavior: 'smooth' });
    }
  };

  const scrollToTop = () => {
    window.scrollTo({ top: 0, behavior: 'smooth' });
  };

  return (
    <div className="min-h-screen bg-white">
      {/* Reusable Header Component */}
      <Header onLogout={() => {}} />

      {/* Hero Section */}
      <section className="relative min-h-[90vh] flex items-center justify-center px-6 py-20 bg-white">
        <div className="relative max-w-7xl mx-auto text-center">
          <div className="space-y-8">
            <div className="inline-flex items-center gap-2 px-8 py-4 bg-yellow-400 rounded-full text-black font-black text-sm uppercase tracking-wider">
              <span className="text-2xl">‚ö°</span>
              <span>–†–ï–í–û–õ–Æ–¶–ò–Ø –í –°–û–ó–î–ê–ù–ò–ò –ê–í–ê–¢–ê–†–û–í</span>
              </div>
            
            <h1 className="text-4xl sm:text-6xl md:text-7xl lg:text-8xl font-black text-black leading-tight">
              –°–û–ó–î–ê–í–ê–ô–¢–ï
              <span className="block text-brand">
                –ê–ù–ò–ú–ò–†–û–í–ê–ù–ù–´–ï –ê–í–ê–¢–ê–†–´
              </span>
            </h1>
            
            <p className="text-2xl md:text-2xl lg:text-3xl text-black font-bold max-w-4xl mx-auto">
              –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–æ—â—å –ò–ò –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –∑–∞ —Å—á–∏—Ç–∞–Ω–Ω—ã–µ –º–∏–Ω—É—Ç—ã
            </p>
            
            <div className="flex flex-col sm:flex-row gap-6 justify-center pt-8">
              <Button
                size="lg"
                className="w-full sm:w-auto whitespace-normal px-6 sm:px-10 py-6 text-lg"
                onClick={() => navigate('/register')}
              >
                –ü–û–ü–†–û–ë–û–í–ê–¢–¨ –ë–ï–°–ü–õ–ê–¢–ù–û ‚Üí
              </Button>
              <Button
                size="lg"
                variant="outline"
                className="w-full sm:w-auto whitespace-normal px-6 sm:px-10 py-6 text-lg"
                onClick={scrollToFeatures}
              >
                –£–ó–ù–ê–¢–¨ –ë–û–õ–¨–®–ï
              </Button>
            </div>
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section ref={featuresRef} className="py-24 px-6 bg-gray-100">
        <div className="max-w-7xl mx-auto">
          <div className="text-center mb-16">
            <h2 className="text-3xl sm:text-5xl md:text-6xl lg:text-7xl font-black text-black mb-8">
              –í–û–ó–ú–û–ñ–ù–û–°–¢–ò –ü–õ–ê–¢–§–û–†–ú–´
            </h2>
            <p className="text-2xl text-black font-bold max-w-3xl mx-auto">
              –í—Å–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∞–≤–∞—Ç–∞—Ä–æ–≤
            </p>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {[
              {
                icon: 'üé®',
                title: '–ò–ò-–ì–ï–ù–ï–†–ê–¶–ò–Ø',
                description: '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∞–≤–∞—Ç–∞—Ä—ã —Å –ø–æ–º–æ—â—å—é –ø–µ—Ä–µ–¥–æ–≤—ã—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤',
                bg: 'bg-red-500',
                border: 'border-red-600'
              },
              {
                icon: '‚ö°',
                title: '–ë–´–°–¢–†–ê–Ø –û–ë–†–ê–ë–û–¢–ö–ê',
                description: '–ü–æ–ª—É—á–∞–π—Ç–µ –≥–æ—Ç–æ–≤—ã–µ –∞–≤–∞—Ç–∞—Ä—ã –∑–∞ —Å—á–∏—Ç–∞–Ω–Ω—ã–µ –º–∏–Ω—É—Ç—ã',
                bg: 'bg-blue-500',
                border: 'border-blue-600'
              },
              {
                icon: 'üé¨',
                title: '–ê–ù–ò–ú–ê–¶–ò–Ø',
                description: '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –∂–∏–≤—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ —Å —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–π –º–∏–º–∏–∫–æ–π',
                bg: 'bg-purple-500',
                border: 'border-purple-600'
              }
            ].map((feature, idx) => (
              <div 
                key={idx} 
                className="relative p-8 bg-white rounded-xl border border-neutral-200 shadow-card hover:shadow-none transition"
              >
                <div className={`w-16 h-16 bg-neutral-100 rounded-lg flex items-center justify-center text-3xl mb-6`}>
                  {feature.icon}
                </div>
                <h3 className="text-3xl font-black text-black mb-4">{feature.title}</h3>
                <p className="text-lg text-black font-semibold">{feature.description}</p>
            </div>
            ))}
          </div>
        </div>
      </section>

      {/* How It Works Section */}
      <section className="py-24 px-6 bg-white">
        <div className="max-w-6xl mx-auto">
          <div className="text-center mb-16">
            <h2 className="text-5xl md:text-6xl lg:text-7xl font-black text-black mb-6">
              –ö–ê–ö –≠–¢–û –†–ê–ë–û–¢–ê–ï–¢?
          </h2>
            <p className="text-2xl text-black font-bold">
              –í—Å–µ–≥–æ —Ç—Ä–∏ –ø—Ä–æ—Å—Ç—ã—Ö —à–∞–≥–∞!
            </p>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-12">
            {[
              { step: 1, title: '–û–ü–ò–®–ò–¢–ï –ò–î–ï–Æ', icon: 'üí≠', color: 'bg-yellow-400' },
              { step: 2, title: '–ò–ò –ì–ï–ù–ï–†–ò–†–£–ï–¢', icon: 'ü§ñ', color: 'bg-green-400' },
              { step: 3, title: '–°–ö–ê–ß–ê–ô–¢–ï –†–ï–ó–£–õ–¨–¢–ê–¢', icon: 'üéâ', color: 'bg-blue-400' }
            ].map((item, idx) => (
              <div key={idx} className="text-center">
                <div className={`w-32 h-32 ${item.color} rounded-full flex items-center justify-center text-5xl mx-auto mb-6 shadow-2xl border-4 border-black`}>
                  {item.icon}
                </div>
                <div className="text-6xl lg:text-8xl font-black text-black mb-4">
                  {item.step}
                </div>
                <h3 className="text-2xl font-black text-black mb-3">{item.title}</h3>
              </div>
            ))}
                </div>
              </div>
      </section>

      {/* Animated Showcase Section */}
      <section className="py-16 bg-neutral-100 overflow-hidden">
        <div className="max-w-none">
          <div className="marquee gap-24 px-6 text-4xl font-black whitespace-nowrap">
            {Array.from({ length: 10 }).map((_, idx) => (
              <span
                key={idx}
                className={
                  [
                    'text-brand',
                    'text-accent',
                    'text-purple-600',
                    'text-blue-600',
                    'text-pink-600',
                  ][idx % 5]
                }
              >
                ToonzyAI
              </span>
            ))}
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-24 px-6 bg-white text-black">
        <div className="max-w-4xl mx-auto text-center">
          <h2 className="text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-black mb-8">
            –ì–û–¢–û–í–´ –°–û–ó–î–ê–¢–¨
            <span className="block text-brand">–ß–¢–û-–¢–û –ù–ï–í–ï–†–û–Ø–¢–ù–û–ï?</span>
          </h2>
          <p className="text-2xl font-bold mb-12">
            –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Ä–µ–≤–æ–ª—é—Ü–∏–∏ –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö –∞–≤–∞—Ç–∞—Ä–æ–≤
          </p>
          <div className="flex flex-col sm:flex-row gap-6 justify-center">
            <Button 
              size="lg" 
              className="px-10 py-6 text-lg"
              onClick={() => navigate('/register')}
            >
              –ù–ê–ß–ê–¢–¨ –ë–ï–°–ü–õ–ê–¢–ù–û üöÄ
            </Button>
            <Button 
              size="lg" 
              variant="outline" 
              className="px-10 py-6 text-lg"
              onClick={() => alert('–§—É–Ω–∫—Ü–∏—è —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!')}
            >
              –°–í–Ø–ó–ê–¢–¨–°–Ø –° –ù–ê–ú–ò
            </Button>
          </div>
        </div>
      </section>

      {/* Reusable Footer Component */}
      <Footer />
    </div>
  );
} 